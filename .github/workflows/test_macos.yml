name: Test on macOS
on: [pull_request, push]

jobs:
  build_macos:
    runs-on: macos-latest
    if: |
      github.event_name == 'pull_request'
      || contains(github.event.head_commit.message, '[test]')
      || contains(github.event.head_commit.message, '[test-macos]')
      || startsWith(github.ref, 'refs/tags/v')

    strategy:
      fail-fast: false

      matrix:
        build_type: [Debug, Release]
        c_compiler: [gcc-11, gcc-12, clang]
        bit7z_auto_format: [OFF, ON]
        bit7z_regex_matching: [OFF, ON]
        bit7z_link_libcpp: [OFF, ON]
        include:
          - c_compiler: gcc-11
            cpp_compiler: g++-11
            enable_sanitizers: OFF
          - c_compiler: gcc-12
            cpp_compiler: g++-12
            enable_sanitizers: OFF
          - c_compiler: clang
            cpp_compiler: clang++            
            enable_sanitizers: ON
        exclude:
          - c_compiler: gcc-11
            bit7z_link_libcpp: ON
          - c_compiler: gcc-12
            bit7z_link_libcpp: ON

    name: |
      macOS, ${{ matrix.c_compiler }}, ${{ matrix.build_type }}${{ matrix.bit7z_auto_format == 'ON' && ', AUTO_FORMAT' || '' }}${{ matrix.bit7z_regex_matching == 'ON' && ', REGEX_MATCHING' || '' }}${{ matrix.bit7z_link_libcpp == 'ON' && ', LINK_LIBCPP' || '' }}

    steps:
    - uses: actions/checkout@v3

    - name: Building and testing bit7z
      uses: ./.github/actions/test_action
      with:
        c_compiler: ${{ matrix.c_compiler }}
        cpp_compiler: ${{ matrix.cpp_compiler }}
        sevenzip_version: 23.01
        enable_sanitizers: ${{ matrix.enable_sanitizers }}
        build_type: ${{ matrix.build_type }}
        build_flags: |
            -DBIT7Z_TESTS_USE_SYSTEM_7ZIP=OFF -DBIT7Z_AUTO_FORMAT=${{ matrix.bit7z_auto_format }} -DBIT7Z_REGEX_MATCHING=${{ matrix.bit7z_regex_matching }} -DBIT7Z_LINK_LIBCPP=${{ matrix.bit7z_link_libcpp }}