name: 'Test bit7z'
description: 'Build and test bit7z'
inputs:
  c_compiler:
    description: 'C Compiler'
    required: true
  cpp_compiler:
    description: 'C++ Compiler'
    required: true
  build_type:
    description: 'Build Type'
    required: true
  build_flags:
    description: 'Build flags'
    required: true
  sevenzip_version:
    description: 'Version of 7-Zip to use for the tests'
    required: true
  shell:
    description: 'The shell to be used for executing the steps'
    required: false
    default: bash
  enable_sanitizers:
    description: 'Enable sanitizer for testing bit7z'
    required: false
    default: ON
  
runs:
  using: "composite"
  steps:
    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      shell: ${{ inputs.shell }}
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ inputs.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ inputs.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ inputs.build_type }}
        -DBIT7Z_BUILD_TESTS=ON
        -DBIT7Z_ENABLE_SANITIZERS=${{ inputs.enable_sanitizers }}
        -DBIT7Z_7ZIP_VERSION="${{ inputs.sevenzip_version }}"
        ${{ inputs.build_flags }}
        -S ${{ github.workspace }}
        
    - name: Build 7z.so for tests (Ubuntu)
      shell: bash
      if: runner.os == 'Linux' && ${{ inputs.sevenzip_version != 16.02 }}
      run: |
        git clone --depth 1 https://github.com/rikyoz/7-Zip ${{ github.workspace }}/../7-zip
        git -C ${{ github.workspace }}/../7-zip fetch --tags
        git -C ${{ github.workspace }}/../7-zip checkout v${{ inputs.sevenzip_version }}
        cd ${{ github.workspace }}/../7-zip/CPP/7zip/Bundles/Format7zF/
        make -j -f ../../cmpl_gcc.mak
        cp b/g/7z.so ${{ github.workspace }}/bin/x64/7z.so
        
    - name: Build 7z.so for tests (macOS)
      shell: bash
      if: runner.os == 'macOS'
      run: |
        git clone --depth 1 https://github.com/rikyoz/7-Zip ${{ github.workspace }}/../7-zip
        git -C ${{ github.workspace }}/../7-zip fetch --tags
        git -C ${{ github.workspace }}/../7-zip checkout v${{ inputs.sevenzip_version }}
        cd ${{ github.workspace }}/../7-zip/CPP/7zip/Bundles/Format7zF/
        make -j -f ../../cmpl_mac_x64.mak
        cp b/m_x64/7z.so ${{ github.workspace }}/bin/x64/7z.so

    - name: Build bit7z
      shell: ${{ inputs.shell }}
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ inputs.build_type }} --parallel

    - name: Test bit7z
      shell: ${{ inputs.shell }}
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      # Disabling alloc_dealloc_mismatch for address sanitizer until https://github.com/llvm/llvm-project/issues/52771 is fixed
      env:
        ASAN_OPTIONS: alloc_dealloc_mismatch=0
      run: ctest --build-target bit7z-tests --build-config ${{ inputs.build_type }} --output-on-failure
